<?php

/**
 * @file
 * This module is for managing critical editions of Islandora objects.
 */

// Permissions.
define('ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER', 'use CWRC');
define('ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER', 'edit CWRC');
define('ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION', 'create critical edition');
define('ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION', 'delete critical edition');
define('ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION', 'view critical edition');

// Relationships.
define('ISLANDORA_CRITICAL_EDITION_IS_CRITICAL_EDITION_OF', 'isCriticalEditionOf');

/**
 * Implements hook_menu().
 */
function islandora_critical_edition_menu() {
  $items['admin/islandora/critical_edition'] = array(
    'title' => 'Islandora Critical Edition',
    'description' => 'Configure the Critical Edition Solution Pack.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['islandora/object/%islandora_object/critical_editions'] = array(
    'title' => 'TEI-RDF',
    'page callback' => 'islandora_critical_edition_management',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_mangement_access',
    'access arguments' => array(2),
    'file' => 'includes/manage.inc',
  );
  $items['islandora/cwrcwriter/setup/%islandora_object'] = array(
    'title' => 'Cwrcwriter Setup',
    'page callback' => 'islandora_critical_edition_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/cwrc/%islandora_object/schema/%islandora_object'] = array(
    'title' => 'Set Schema',
    'page callback' => 'islandora_critical_edition_set_user_schema',
    'page arguments' => array(2, 4),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(2),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/cwrcwriter/save_data/%islandora_object'] = array(
    'title' => 'Save Data',
    'page callback' => 'islandora_critical_edition_savedata',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_edit_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/cwrcwriter/setup_canvas/%islandora_object'] = array(
    'title' => 'Shared Canvas Setup',
    'page callback' => 'islandora_critical_edition_canvas_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/object/%islandora_object/manage/datastreams/regen_cwrc_datastream'] = array(
    'title' => 'Regenerate CWRC datastream',
    'file' => 'includes/regen_cwrc_datastream.form.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_regen_cwrc_datastream', 2),
    'type' => MENU_LOCAL_ACTION,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(2),
  );
  return $items;
}

/**
 * Checks if the user has access to the CWRC editor for the given object.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_cwrc_access(AbstractObject $object = NULL) {
  $islandora_object = islandora_object_load($object);
  if (is_null($object)) {
    return FALSE;
  }

  $is_page = in_array('islandora:criticalEditionCModelPage', $object->models);

  return $is_page && islandora_object_access_callback(ISLANDORA_VIEW_OBJECTS, $object) && user_access(ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER);
}

/**
 * Checks if the user has access to critical editions management on the object.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_mangement_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  $is_book = in_array('islandora:bookCModel', $object->models);

  return $is_book && (user_access(ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION) ||
      user_access(ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION) ||
      user_access(ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION)) &&
      islandora_object_access_callback(ISLANDORA_VIEW_OBJECTS, $object);
}

/**
 * Checks to see if the user should have access save critical edition data.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_edit_cwrc_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  $is_page = in_array('islandora:criticalEditionCModelPage', $object->models);

  return $is_page && islandora_object_access_callback(ISLANDORA_VIEW_OBJECTS, $object) && user_access(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER);
}

/**
 * Implements hook_permission().
 */
function islandora_critical_edition_permission() {
  return array(
    ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER => array(
      'title' => t('Use CWRCWriter'),
      'description' => t('Access CWRCWriter.'),
    ),
    ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER => array(
      'title' => t('Edit with CWRCWriter'),
      'description' => t('Edit and save content within CWRCWriter to objects in
        the repository. Note: Fedora XACML security policies may override this
        permission.'),
    ),
    ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION => array(
      'title' => t('Create Critical Editions'),
      'description' => t('Create Critical Editions of Islandora Books.'),
    ),
    ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION => array(
      'title' => t('Delete Critical Editions'),
      'description' => t('Delete Critical Editions of Islandora Books.'),
    ),
    ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION => array(
      'title' => t('View Critical Editions'),
      'description' => t('View Critical Editions of Islandora Books.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_critical_edition_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_critical_edition' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_edition',
      'pattern' => 'islandora_critical_edition__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_schema' => array(
      'template' => drupal_get_path('module', 'islandora_critical_edition') . 'theme/islandora-img-pane',
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalEditionCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_critical_edition', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_critical_edition_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition');
  $markup_module_path = drupal_get_path('module', 'islandora_markup_editor');
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  // Page Content Model.
  $critical_edition_page_content_model = $connection->repository->constructObject('islandora:criticalEditionCModelPage');
  $critical_edition_page_content_model->owner = 'fedoraAdmin';
  $critical_edition_page_content_model->label = 'Islandora Critical Edition Page Content Model';
  $critical_edition_page_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_page_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_crtitical_edition_page_ds_composite_model.xml", FALSE);
  $critical_edition_page_content_model->ingestDatastream($datastream);

  // Critical Edition Content Model.
  $critical_edition_content_model = $connection->repository->constructObject('islandora:criticalEditionCModel');
  $critical_edition_content_model->owner = 'fedoraAdmin';
  $critical_edition_content_model->label = 'Islandora Critical Edition Content Model';
  $critical_edition_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_edition_ds_composite_model.xml", FALSE);
  $critical_edition_content_model->ingestDatastream($datastream);

  return array(
    'islandora_critical_edition' => array(
      'title' => 'Islandora critical editions',
      'objects' => array(
        $critical_edition_content_model,
        $critical_edition_page_content_model,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_critical_edition_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_critical_edition');
  return array(
    'Islandora Critical Edition Mods Form' => array('form_file' => "$module_path/xml/islandora_critical_edition_form_mods.xml"),
  );
}

/**
 * Implements hook_islandora_content_model_forms_form_associations().
 */
function islandora_critical_edition_islandora_content_model_forms_form_associations() {
  return array(
    'critical_edition_form_mods' => array(
      'content_model' => 'islandora:criticalEditionCModel',
      'form_name' => 'Islandora Critical Edition Mods Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}
